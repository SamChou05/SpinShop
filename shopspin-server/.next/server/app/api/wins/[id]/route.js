(()=>{var e={};e.id=503,e.ids=[503],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6330:e=>{"use strict";e.exports=require("@prisma/client")},6487:()=>{},8335:()=>{},8994:(e,t,r)=>{"use strict";r.d(t,{P:()=>n});var s=r(6330);let a=globalThis.prisma??new s.PrismaClient({log:["query"]});class i{async createUser(e){let t=await a.user.create({data:{email:e.email,name:e.name,street:e.address.street,city:e.address.city,state:e.address.state,zipCode:e.address.zipCode,country:e.address.country,phone:e.phone}});return this.formatUser(t)}async getUserByEmail(e){let t=await a.user.findUnique({where:{email:e}});return t?this.formatUser(t):null}async getUserById(e){let t=await a.user.findUnique({where:{id:e}});return t?this.formatUser(t):null}async updateUser(e,t){try{let r={};t.email&&(r.email=t.email),t.name&&(r.name=t.name),void 0!==t.phone&&(r.phone=t.phone),t.address&&(r.street=t.address.street,r.city=t.address.city,r.state=t.address.state,r.zipCode=t.address.zipCode,r.country=t.address.country);let s=await a.user.update({where:{id:e},data:r});return this.formatUser(s)}catch(e){return console.error("Error updating user:",e),null}}async createBet(e){let t=await a.bet.create({data:{userId:e.userId,productName:e.product.name,productPrice:e.product.price,productCurrency:e.product.currency,productUrl:e.product.url,productImage:e.product.image,stakeAmount:e.stakeAmount,probability:e.probability,won:e.won,betTimestamp:e.betTimestamp}});return this.formatBet(t)}async getBetById(e){let t=await a.bet.findUnique({where:{id:e}});return t?this.formatBet(t):null}async getBetsByUserId(e){return(await a.bet.findMany({where:{userId:e},orderBy:{betTimestamp:"desc"}})).map(this.formatBet)}async getAllBets(){return(await a.bet.findMany({orderBy:{betTimestamp:"desc"}})).map(this.formatBet)}async createWin(e){let t=await a.win.create({data:{userId:e.userId,productName:e.product.name,productPrice:e.product.price,productCurrency:e.product.currency,productUrl:e.product.url,productImage:e.product.image,stakeAmount:e.stakeAmount,probability:e.probability,status:this.mapStatusToPrisma(e.status),orderNumber:e.orderDetails?.orderNumber,trackingNumber:e.orderDetails?.trackingNumber,estimatedDelivery:e.orderDetails?.estimatedDelivery,actualDelivery:e.orderDetails?.actualDelivery,notes:e.orderDetails?.notes,winTimestamp:e.winTimestamp}});return this.formatWin(t)}async getWinById(e){let t=await a.win.findUnique({where:{id:e}});return t?this.formatWin(t):null}async getWinsByUserId(e){return(await a.win.findMany({where:{userId:e},orderBy:{winTimestamp:"desc"}})).map(this.formatWin)}async getAllWins(){return(await a.win.findMany({orderBy:{winTimestamp:"desc"}})).map(this.formatWin)}async updateWin(e,t){try{let r={};t.status&&(r.status=this.mapStatusToPrisma(t.status)),t.orderDetails&&(void 0!==t.orderDetails.orderNumber&&(r.orderNumber=t.orderDetails.orderNumber),void 0!==t.orderDetails.trackingNumber&&(r.trackingNumber=t.orderDetails.trackingNumber),void 0!==t.orderDetails.estimatedDelivery&&(r.estimatedDelivery=t.orderDetails.estimatedDelivery),void 0!==t.orderDetails.actualDelivery&&(r.actualDelivery=t.orderDetails.actualDelivery),void 0!==t.orderDetails.notes&&(r.notes=t.orderDetails.notes));let s=await a.win.update({where:{id:e},data:r});return this.formatWin(s)}catch(e){return console.error("Error updating win:",e),null}}async getStatistics(){let[e,t,r]=await Promise.all([a.user.count(),a.bet.findMany(),a.win.findMany()]),s=t.reduce((e,t)=>e+t.stakeAmount,0),i=r.reduce((e,t)=>e+t.productPrice,0),n=t.length,o=t.filter(e=>e.won).length;return{totalUsers:e,totalBets:n,winningBets:o,losingBets:t.filter(e=>!e.won).length,winRate:parseFloat((n>0?o/n*100:0).toFixed(2)),totalWins:r.length,pendingWins:r.filter(e=>"PENDING"===e.status).length,processingWins:r.filter(e=>"PROCESSING"===e.status).length,orderedWins:r.filter(e=>"ORDERED"===e.status).length,shippedWins:r.filter(e=>"SHIPPED"===e.status).length,deliveredWins:r.filter(e=>"DELIVERED"===e.status).length,totalStakesCollected:s,totalValuePaidOut:i,profitLoss:s-i}}async reset(){await a.$transaction([a.bet.deleteMany(),a.win.deleteMany(),a.user.deleteMany()])}formatUser(e){return{id:e.id,email:e.email,name:e.name,address:{street:e.street,city:e.city,state:e.state,zipCode:e.zipCode,country:e.country},phone:e.phone,createdAt:e.createdAt,updatedAt:e.updatedAt}}formatBet(e){return{id:e.id,userId:e.userId,product:{name:e.productName,price:e.productPrice,currency:e.productCurrency,url:e.productUrl,image:e.productImage},stakeAmount:e.stakeAmount,probability:e.probability,won:e.won,betTimestamp:e.betTimestamp,createdAt:e.createdAt,updatedAt:e.updatedAt}}formatWin(e){try{return{id:e.id,userId:e.userId,product:{name:e.productName,price:e.productPrice,currency:e.productCurrency,url:e.productUrl,image:e.productImage},stakeAmount:e.stakeAmount,probability:e.probability,status:e.status?e.status.toLowerCase():"pending",orderDetails:{orderNumber:e.orderNumber||null,trackingNumber:e.trackingNumber||null,estimatedDelivery:e.estimatedDelivery||null,actualDelivery:e.actualDelivery||null,notes:e.notes||null},winTimestamp:e.winTimestamp,createdAt:e.createdAt,updatedAt:e.updatedAt}}catch(t){throw console.error("Error formatting win:",t,"Win data:",e),t}}mapStatusToPrisma(e){return e.toUpperCase().replace(/-/g,"_")}mapStatusFromPrisma(e){let t=e.toLowerCase();return console.log("Mapping status from Prisma:",e,"to:",t),t}}let n=new i},9082:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>w,routeModule:()=>l,serverHooks:()=>y,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>c,PATCH:()=>d});var a=r(6559),i=r(8088),n=r(7719),o=r(2190),u=r(8994);async function d(e,{params:t}){try{let{id:r}=await t,s=await e.json(),a=await u.P.getWinById(r);if(!a)return o.NextResponse.json({success:!1,error:"Win not found"},{status:404});let i=await u.P.updateWin(r,{status:s.status||a.status,orderDetails:s.orderDetails?{...a.orderDetails,...s.orderDetails}:a.orderDetails});if(!i)return o.NextResponse.json({success:!1,error:"Failed to update win"},{status:500});return console.log(`ðŸŽ° WIN UPDATED! ID: ${r}, Status: ${i.status}`),o.NextResponse.json({success:!0,data:i,message:"Win status updated successfully"})}catch(e){return console.error("Error updating win:",e),o.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}async function c(e,{params:t}){try{let{id:e}=await t,r=await u.P.getWinById(e);if(!r)return o.NextResponse.json({success:!1,error:"Win not found"},{status:404});return o.NextResponse.json({success:!0,data:r})}catch(e){return console.error("Error fetching win:",e),o.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/wins/[id]/route",pathname:"/api/wins/[id]",filename:"route",bundlePath:"app/api/wins/[id]/route"},resolvedPagePath:"/Users/samchou/Sweepstakes Google Extension/shopspin-server/src/app/api/wins/[id]/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:p,workUnitAsyncStorage:m,serverHooks:y}=l;function w(){return(0,n.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:m})}},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(9082));module.exports=s})();