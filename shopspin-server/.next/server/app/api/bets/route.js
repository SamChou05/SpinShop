/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bets/route";
exports.ids = ["app/api/bets/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbets%2Froute&page=%2Fapi%2Fbets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbets%2Froute.ts&appDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbets%2Froute&page=%2Fapi%2Fbets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbets%2Froute.ts&appDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_samchou_Sweepstakes_Google_Extension_shopspin_server_src_app_api_bets_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/bets/route.ts */ \"(rsc)/./src/app/api/bets/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bets/route\",\n        pathname: \"/api/bets\",\n        filename: \"route\",\n        bundlePath: \"app/api/bets/route\"\n    },\n    resolvedPagePath: \"/Users/samchou/Sweepstakes Google Extension/shopspin-server/src/app/api/bets/route.ts\",\n    nextConfigOutput,\n    userland: _Users_samchou_Sweepstakes_Google_Extension_shopspin_server_src_app_api_bets_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZiZXRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZiZXRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYmV0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNhbWNob3UlMkZTd2VlcHN0YWtlcyUyMEdvb2dsZSUyMEV4dGVuc2lvbiUyRnNob3BzcGluLXNlcnZlciUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzYW1jaG91JTJGU3dlZXBzdGFrZXMlMjBHb29nbGUlMjBFeHRlbnNpb24lMkZzaG9wc3Bpbi1zZXJ2ZXImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3FDO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2FtY2hvdS9Td2VlcHN0YWtlcyBHb29nbGUgRXh0ZW5zaW9uL3Nob3BzcGluLXNlcnZlci9zcmMvYXBwL2FwaS9iZXRzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9iZXRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYmV0c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYmV0cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zYW1jaG91L1N3ZWVwc3Rha2VzIEdvb2dsZSBFeHRlbnNpb24vc2hvcHNwaW4tc2VydmVyL3NyYy9hcHAvYXBpL2JldHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbets%2Froute&page=%2Fapi%2Fbets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbets%2Froute.ts&appDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/bets/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/bets/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/database-prisma */ \"(rsc)/./src/lib/database-prisma.ts\");\n/* harmony import */ var _lib_validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/validation */ \"(rsc)/./src/lib/validation.ts\");\n/* harmony import */ var _lib_rateLimit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/rateLimit */ \"(rsc)/./src/lib/rateLimit.ts\");\n\n\n\n\n// Record a new bet (win or loss)\nasync function POST(request) {\n    try {\n        // Rate limiting check\n        const clientIP = (0,_lib_rateLimit__WEBPACK_IMPORTED_MODULE_3__.getClientIP)(request);\n        if (_lib_rateLimit__WEBPACK_IMPORTED_MODULE_3__.betRateLimiter.isRateLimited(clientIP)) {\n            const resetTime = _lib_rateLimit__WEBPACK_IMPORTED_MODULE_3__.betRateLimiter.getResetTime(clientIP);\n            const remaining = Math.ceil((resetTime - Date.now()) / 1000 / 60); // minutes\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: `Rate limit exceeded. Too many bets. Try again in ${remaining} minutes.`\n            }, {\n                status: 429\n            });\n        }\n        const betData = await request.json();\n        console.log('🎰 SERVER: Bet recording request received');\n        console.log('🎰 SERVER: Bet data:', {\n            userId: betData.userId,\n            productName: betData.product.name,\n            stake: betData.stakeAmount,\n            won: betData.won,\n            probability: betData.probability\n        });\n        // Validate all input fields\n        try {\n            if (!betData.userId || typeof betData.userId !== 'string') {\n                throw new _lib_validation__WEBPACK_IMPORTED_MODULE_2__.ValidationError('User ID is required');\n            }\n            (0,_lib_validation__WEBPACK_IMPORTED_MODULE_2__.validateProduct)(betData.product);\n            (0,_lib_validation__WEBPACK_IMPORTED_MODULE_2__.validateStakeAmount)(betData.stakeAmount, betData.product.price);\n            (0,_lib_validation__WEBPACK_IMPORTED_MODULE_2__.validateProbability)(betData.probability);\n            if (typeof betData.won !== 'boolean') {\n                throw new _lib_validation__WEBPACK_IMPORTED_MODULE_2__.ValidationError('Won status must be a boolean');\n            }\n        } catch (error) {\n            if (error instanceof _lib_validation__WEBPACK_IMPORTED_MODULE_2__.ValidationError) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: error.message\n                }, {\n                    status: 400\n                });\n            }\n            throw error;\n        }\n        // Verify user exists\n        const user = await _lib_database_prisma__WEBPACK_IMPORTED_MODULE_1__.prismaDb.getUserById(betData.userId);\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'User not found'\n            }, {\n                status: 404\n            });\n        }\n        // Create bet record\n        const bet = await _lib_database_prisma__WEBPACK_IMPORTED_MODULE_1__.prismaDb.createBet({\n            userId: betData.userId,\n            product: betData.product,\n            stakeAmount: betData.stakeAmount,\n            probability: betData.probability,\n            won: betData.won,\n            betTimestamp: new Date()\n        });\n        const resultText = betData.won ? 'WIN' : 'LOSS';\n        console.log(`🎰 ${resultText} RECORDED! User: ${user.email}, Product: ${betData.product.name}, Stake: $${betData.stakeAmount}, Won: ${betData.won}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: bet,\n            message: `Bet recorded successfully`\n        });\n    } catch (error) {\n        console.error('🎰 SERVER: Error recording bet:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n// Get all bets\nasync function GET() {\n    try {\n        const bets = await _lib_database_prisma__WEBPACK_IMPORTED_MODULE_1__.prismaDb.getAllBets();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: bets\n        });\n    } catch (error) {\n        console.error('🎰 SERVER: Error fetching bets:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/bets/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database-prisma.ts":
/*!************************************!*\
  !*** ./src/lib/database-prisma.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PrismaDatabase: () => (/* binding */ PrismaDatabase),\n/* harmony export */   prismaDb: () => (/* binding */ prismaDb)\n/* harmony export */ });\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\nclass PrismaDatabase {\n    // User operations\n    async createUser(userData) {\n        const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.create({\n            data: {\n                email: userData.email,\n                name: userData.name,\n                street: userData.address.street,\n                city: userData.address.city,\n                state: userData.address.state,\n                zipCode: userData.address.zipCode,\n                country: userData.address.country,\n                phone: userData.phone\n            }\n        });\n        return this.formatUser(user);\n    }\n    async getUserByEmail(email) {\n        const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                email\n            }\n        });\n        return user ? this.formatUser(user) : null;\n    }\n    async getUserById(id) {\n        const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n            where: {\n                id\n            }\n        });\n        return user ? this.formatUser(user) : null;\n    }\n    async updateUser(id, updates) {\n        try {\n            const updateData = {};\n            if (updates.email) updateData.email = updates.email;\n            if (updates.name) updateData.name = updates.name;\n            if (updates.phone !== undefined) updateData.phone = updates.phone;\n            if (updates.address) {\n                updateData.street = updates.address.street;\n                updateData.city = updates.address.city;\n                updateData.state = updates.address.state;\n                updateData.zipCode = updates.address.zipCode;\n                updateData.country = updates.address.country;\n            }\n            const user = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.update({\n                where: {\n                    id\n                },\n                data: updateData\n            });\n            return this.formatUser(user);\n        } catch (error) {\n            console.error('Error updating user:', error);\n            return null;\n        }\n    }\n    // Bet operations\n    async createBet(betData) {\n        const bet = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.bet.create({\n            data: {\n                userId: betData.userId,\n                productName: betData.product.name,\n                productPrice: betData.product.price,\n                productCurrency: betData.product.currency,\n                productUrl: betData.product.url,\n                productImage: betData.product.image,\n                stakeAmount: betData.stakeAmount,\n                probability: betData.probability,\n                won: betData.won,\n                betTimestamp: betData.betTimestamp\n            }\n        });\n        return this.formatBet(bet);\n    }\n    async getBetById(id) {\n        const bet = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.bet.findUnique({\n            where: {\n                id\n            }\n        });\n        return bet ? this.formatBet(bet) : null;\n    }\n    async getBetsByUserId(userId) {\n        const bets = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.bet.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                betTimestamp: 'desc'\n            }\n        });\n        return bets.map(this.formatBet);\n    }\n    async getAllBets() {\n        const bets = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.bet.findMany({\n            orderBy: {\n                betTimestamp: 'desc'\n            }\n        });\n        return bets.map(this.formatBet);\n    }\n    // Win operations\n    async createWin(winData) {\n        const win = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.create({\n            data: {\n                userId: winData.userId,\n                productName: winData.product.name,\n                productPrice: winData.product.price,\n                productCurrency: winData.product.currency,\n                productUrl: winData.product.url,\n                productImage: winData.product.image,\n                stakeAmount: winData.stakeAmount,\n                probability: winData.probability,\n                status: this.mapStatusToPrisma(winData.status),\n                orderNumber: winData.orderDetails?.orderNumber,\n                trackingNumber: winData.orderDetails?.trackingNumber,\n                estimatedDelivery: winData.orderDetails?.estimatedDelivery,\n                actualDelivery: winData.orderDetails?.actualDelivery,\n                notes: winData.orderDetails?.notes,\n                winTimestamp: winData.winTimestamp\n            }\n        });\n        return this.formatWin(win);\n    }\n    async getWinById(id) {\n        const win = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.findUnique({\n            where: {\n                id\n            }\n        });\n        return win ? this.formatWin(win) : null;\n    }\n    async getWinsByUserId(userId) {\n        const wins = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                winTimestamp: 'desc'\n            }\n        });\n        return wins.map(this.formatWin);\n    }\n    async getAllWins() {\n        const wins = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.findMany({\n            orderBy: {\n                winTimestamp: 'desc'\n            }\n        });\n        return wins.map(this.formatWin);\n    }\n    async updateWin(id, updates) {\n        try {\n            const updateData = {};\n            if (updates.status) updateData.status = this.mapStatusToPrisma(updates.status);\n            if (updates.orderDetails) {\n                if (updates.orderDetails.orderNumber !== undefined) updateData.orderNumber = updates.orderDetails.orderNumber;\n                if (updates.orderDetails.trackingNumber !== undefined) updateData.trackingNumber = updates.orderDetails.trackingNumber;\n                if (updates.orderDetails.estimatedDelivery !== undefined) updateData.estimatedDelivery = updates.orderDetails.estimatedDelivery;\n                if (updates.orderDetails.actualDelivery !== undefined) updateData.actualDelivery = updates.orderDetails.actualDelivery;\n                if (updates.orderDetails.notes !== undefined) updateData.notes = updates.orderDetails.notes;\n            }\n            const win = await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.update({\n                where: {\n                    id\n                },\n                data: updateData\n            });\n            return this.formatWin(win);\n        } catch (error) {\n            console.error('Error updating win:', error);\n            return null;\n        }\n    }\n    // Statistics\n    async getStatistics() {\n        const [users, bets, wins] = await Promise.all([\n            _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.count(),\n            _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.bet.findMany(),\n            _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.findMany()\n        ]);\n        const totalStakesCollected = bets.reduce((sum, bet)=>sum + bet.stakeAmount, 0);\n        const totalValuePaidOut = wins.reduce((sum, win)=>sum + win.productPrice, 0);\n        const profitLoss = totalStakesCollected - totalValuePaidOut;\n        const totalBets = bets.length;\n        const winningBets = bets.filter((b)=>b.won).length;\n        const losingBets = bets.filter((b)=>!b.won).length;\n        const winRate = totalBets > 0 ? winningBets / totalBets * 100 : 0;\n        return {\n            totalUsers: users,\n            totalBets,\n            winningBets,\n            losingBets,\n            winRate: parseFloat(winRate.toFixed(2)),\n            totalWins: wins.length,\n            pendingWins: wins.filter((w)=>w.status === 'PENDING').length,\n            processingWins: wins.filter((w)=>w.status === 'PROCESSING').length,\n            orderedWins: wins.filter((w)=>w.status === 'ORDERED').length,\n            shippedWins: wins.filter((w)=>w.status === 'SHIPPED').length,\n            deliveredWins: wins.filter((w)=>w.status === 'DELIVERED').length,\n            totalStakesCollected,\n            totalValuePaidOut,\n            profitLoss\n        };\n    }\n    // Reset data (for development/testing)\n    async reset() {\n        await _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.$transaction([\n            _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.bet.deleteMany(),\n            _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.win.deleteMany(),\n            _prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.user.deleteMany()\n        ]);\n    }\n    // Helper methods to format data\n    formatUser(user) {\n        return {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            address: {\n                street: user.street,\n                city: user.city,\n                state: user.state,\n                zipCode: user.zipCode,\n                country: user.country\n            },\n            phone: user.phone,\n            createdAt: user.createdAt,\n            updatedAt: user.updatedAt\n        };\n    }\n    formatBet(bet) {\n        return {\n            id: bet.id,\n            userId: bet.userId,\n            product: {\n                name: bet.productName,\n                price: bet.productPrice,\n                currency: bet.productCurrency,\n                url: bet.productUrl,\n                image: bet.productImage\n            },\n            stakeAmount: bet.stakeAmount,\n            probability: bet.probability,\n            won: bet.won,\n            betTimestamp: bet.betTimestamp,\n            createdAt: bet.createdAt,\n            updatedAt: bet.updatedAt\n        };\n    }\n    formatWin(win) {\n        try {\n            return {\n                id: win.id,\n                userId: win.userId,\n                product: {\n                    name: win.productName,\n                    price: win.productPrice,\n                    currency: win.productCurrency,\n                    url: win.productUrl,\n                    image: win.productImage\n                },\n                stakeAmount: win.stakeAmount,\n                probability: win.probability,\n                status: win.status ? win.status.toLowerCase() : 'pending',\n                orderDetails: {\n                    orderNumber: win.orderNumber || null,\n                    trackingNumber: win.trackingNumber || null,\n                    estimatedDelivery: win.estimatedDelivery || null,\n                    actualDelivery: win.actualDelivery || null,\n                    notes: win.notes || null\n                },\n                winTimestamp: win.winTimestamp,\n                createdAt: win.createdAt,\n                updatedAt: win.updatedAt\n            };\n        } catch (error) {\n            console.error('Error formatting win:', error, 'Win data:', win);\n            throw error;\n        }\n    }\n    mapStatusToPrisma(status) {\n        return status.toUpperCase().replace(/-/g, '_');\n    }\n    mapStatusFromPrisma(status) {\n        // Convert Prisma enum values to lowercase\n        const mapped = status.toLowerCase();\n        console.log('Mapping status from Prisma:', status, 'to:', mapped);\n        return mapped;\n    }\n}\n// Export singleton instance\nconst prismaDb = new PrismaDatabase();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database-prisma.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        'query'\n    ]\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUNYRixnQkFBZ0JFLE1BQU0sSUFDdEIsSUFBSUgsd0RBQVlBLENBQUM7SUFDZkksS0FBSztRQUFDO0tBQVE7QUFDaEIsR0FBRTtBQUVKLElBQUlDLElBQXFDLEVBQUVKLGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NhbWNob3UvU3dlZXBzdGFrZXMgR29vZ2xlIEV4dGVuc2lvbi9zaG9wc3Bpbi1zZXJ2ZXIvc3JjL2xpYi9wcmlzbWEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPVxuICBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/XG4gIG5ldyBQcmlzbWFDbGllbnQoe1xuICAgIGxvZzogWydxdWVyeSddLFxuICB9KVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYSJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwibG9nIiwicHJvY2VzcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/rateLimit.ts":
/*!******************************!*\
  !*** ./src/lib/rateLimit.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminRateLimiter: () => (/* binding */ adminRateLimiter),\n/* harmony export */   betRateLimiter: () => (/* binding */ betRateLimiter),\n/* harmony export */   getClientIP: () => (/* binding */ getClientIP),\n/* harmony export */   userCreationRateLimiter: () => (/* binding */ userCreationRateLimiter)\n/* harmony export */ });\n// Rate limiting utilities\nclass RateLimiter {\n    constructor(maxAttempts, windowMs){\n        this.attempts = new Map();\n        this.maxAttempts = maxAttempts;\n        this.windowMs = windowMs;\n    }\n    isRateLimited(identifier) {\n        const now = Date.now();\n        const entry = this.attempts.get(identifier);\n        if (!entry || now > entry.resetTime) {\n            // Reset or create new entry\n            this.attempts.set(identifier, {\n                count: 1,\n                resetTime: now + this.windowMs\n            });\n            return false;\n        }\n        if (entry.count >= this.maxAttempts) {\n            return true;\n        }\n        // Increment count\n        entry.count++;\n        return false;\n    }\n    getRemainingAttempts(identifier) {\n        const entry = this.attempts.get(identifier);\n        if (!entry || Date.now() > entry.resetTime) {\n            return this.maxAttempts;\n        }\n        return Math.max(0, this.maxAttempts - entry.count);\n    }\n    getResetTime(identifier) {\n        const entry = this.attempts.get(identifier);\n        if (!entry || Date.now() > entry.resetTime) {\n            return Date.now();\n        }\n        return entry.resetTime;\n    }\n    // Clean up old entries periodically\n    cleanup() {\n        const now = Date.now();\n        for (const [key, entry] of this.attempts.entries()){\n            if (now > entry.resetTime) {\n                this.attempts.delete(key);\n            }\n        }\n    }\n}\n// Different rate limiters for different operations\nconst betRateLimiter = new RateLimiter(10, 60 * 60 * 1000); // 10 bets per hour\nconst userCreationRateLimiter = new RateLimiter(3, 60 * 60 * 1000); // 3 user creations per hour\nconst adminRateLimiter = new RateLimiter(100, 60 * 60 * 1000); // 100 admin actions per hour\n// Clean up old entries every 10 minutes\nsetInterval(()=>{\n    betRateLimiter.cleanup();\n    userCreationRateLimiter.cleanup();\n    adminRateLimiter.cleanup();\n}, 10 * 60 * 1000);\nfunction getClientIP(request) {\n    // Try to get real IP from various headers\n    const forwarded = request.headers.get('x-forwarded-for');\n    const realIP = request.headers.get('x-real-ip');\n    const clientIP = request.headers.get('x-client-ip');\n    if (forwarded) {\n        return forwarded.split(',')[0].trim();\n    }\n    if (realIP) {\n        return realIP;\n    }\n    if (clientIP) {\n        return clientIP;\n    }\n    // Fallback to a default for local development\n    return 'unknown';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUgsUUFBUTtRQUNWLE9BQU9BO0lBQ1Q7SUFFQSxJQUFJQyxVQUFVO1FBQ1osT0FBT0E7SUFDVDtJQUVBLDhDQUE4QztJQUM5QyxPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYW1jaG91L1N3ZWVwc3Rha2VzIEdvb2dsZSBFeHRlbnNpb24vc2hvcHNwaW4tc2VydmVyL3NyYy9saWIvcmF0ZUxpbWl0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJhdGUgbGltaXRpbmcgdXRpbGl0aWVzXG5cbmludGVyZmFjZSBSYXRlTGltaXRFbnRyeSB7XG4gIGNvdW50OiBudW1iZXI7XG4gIHJlc2V0VGltZTogbnVtYmVyO1xufVxuXG5jbGFzcyBSYXRlTGltaXRlciB7XG4gIHByaXZhdGUgYXR0ZW1wdHM6IE1hcDxzdHJpbmcsIFJhdGVMaW1pdEVudHJ5PiA9IG5ldyBNYXAoKTtcbiAgcHJpdmF0ZSBtYXhBdHRlbXB0czogbnVtYmVyO1xuICBwcml2YXRlIHdpbmRvd01zOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IobWF4QXR0ZW1wdHM6IG51bWJlciwgd2luZG93TXM6IG51bWJlcikge1xuICAgIHRoaXMubWF4QXR0ZW1wdHMgPSBtYXhBdHRlbXB0cztcbiAgICB0aGlzLndpbmRvd01zID0gd2luZG93TXM7XG4gIH1cblxuICBpc1JhdGVMaW1pdGVkKGlkZW50aWZpZXI6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgY29uc3QgZW50cnkgPSB0aGlzLmF0dGVtcHRzLmdldChpZGVudGlmaWVyKTtcblxuICAgIGlmICghZW50cnkgfHwgbm93ID4gZW50cnkucmVzZXRUaW1lKSB7XG4gICAgICAvLyBSZXNldCBvciBjcmVhdGUgbmV3IGVudHJ5XG4gICAgICB0aGlzLmF0dGVtcHRzLnNldChpZGVudGlmaWVyLCB7XG4gICAgICAgIGNvdW50OiAxLFxuICAgICAgICByZXNldFRpbWU6IG5vdyArIHRoaXMud2luZG93TXNcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChlbnRyeS5jb3VudCA+PSB0aGlzLm1heEF0dGVtcHRzKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBJbmNyZW1lbnQgY291bnRcbiAgICBlbnRyeS5jb3VudCsrO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGdldFJlbWFpbmluZ0F0dGVtcHRzKGlkZW50aWZpZXI6IHN0cmluZyk6IG51bWJlciB7XG4gICAgY29uc3QgZW50cnkgPSB0aGlzLmF0dGVtcHRzLmdldChpZGVudGlmaWVyKTtcbiAgICBpZiAoIWVudHJ5IHx8IERhdGUubm93KCkgPiBlbnRyeS5yZXNldFRpbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLm1heEF0dGVtcHRzO1xuICAgIH1cbiAgICByZXR1cm4gTWF0aC5tYXgoMCwgdGhpcy5tYXhBdHRlbXB0cyAtIGVudHJ5LmNvdW50KTtcbiAgfVxuXG4gIGdldFJlc2V0VGltZShpZGVudGlmaWVyOiBzdHJpbmcpOiBudW1iZXIge1xuICAgIGNvbnN0IGVudHJ5ID0gdGhpcy5hdHRlbXB0cy5nZXQoaWRlbnRpZmllcik7XG4gICAgaWYgKCFlbnRyeSB8fCBEYXRlLm5vdygpID4gZW50cnkucmVzZXRUaW1lKSB7XG4gICAgICByZXR1cm4gRGF0ZS5ub3coKTtcbiAgICB9XG4gICAgcmV0dXJuIGVudHJ5LnJlc2V0VGltZTtcbiAgfVxuXG4gIC8vIENsZWFuIHVwIG9sZCBlbnRyaWVzIHBlcmlvZGljYWxseVxuICBjbGVhbnVwKCk6IHZvaWQge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgZm9yIChjb25zdCBba2V5LCBlbnRyeV0gb2YgdGhpcy5hdHRlbXB0cy5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChub3cgPiBlbnRyeS5yZXNldFRpbWUpIHtcbiAgICAgICAgdGhpcy5hdHRlbXB0cy5kZWxldGUoa2V5KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gRGlmZmVyZW50IHJhdGUgbGltaXRlcnMgZm9yIGRpZmZlcmVudCBvcGVyYXRpb25zXG5leHBvcnQgY29uc3QgYmV0UmF0ZUxpbWl0ZXIgPSBuZXcgUmF0ZUxpbWl0ZXIoMTAsIDYwICogNjAgKiAxMDAwKTsgLy8gMTAgYmV0cyBwZXIgaG91clxuZXhwb3J0IGNvbnN0IHVzZXJDcmVhdGlvblJhdGVMaW1pdGVyID0gbmV3IFJhdGVMaW1pdGVyKDMsIDYwICogNjAgKiAxMDAwKTsgLy8gMyB1c2VyIGNyZWF0aW9ucyBwZXIgaG91clxuZXhwb3J0IGNvbnN0IGFkbWluUmF0ZUxpbWl0ZXIgPSBuZXcgUmF0ZUxpbWl0ZXIoMTAwLCA2MCAqIDYwICogMTAwMCk7IC8vIDEwMCBhZG1pbiBhY3Rpb25zIHBlciBob3VyXG5cbi8vIENsZWFuIHVwIG9sZCBlbnRyaWVzIGV2ZXJ5IDEwIG1pbnV0ZXNcbnNldEludGVydmFsKCgpID0+IHtcbiAgYmV0UmF0ZUxpbWl0ZXIuY2xlYW51cCgpO1xuICB1c2VyQ3JlYXRpb25SYXRlTGltaXRlci5jbGVhbnVwKCk7XG4gIGFkbWluUmF0ZUxpbWl0ZXIuY2xlYW51cCgpO1xufSwgMTAgKiA2MCAqIDEwMDApO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2xpZW50SVAocmVxdWVzdDogUmVxdWVzdCk6IHN0cmluZyB7XG4gIC8vIFRyeSB0byBnZXQgcmVhbCBJUCBmcm9tIHZhcmlvdXMgaGVhZGVyc1xuICBjb25zdCBmb3J3YXJkZWQgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd4LWZvcndhcmRlZC1mb3InKTtcbiAgY29uc3QgcmVhbElQID0gcmVxdWVzdC5oZWFkZXJzLmdldCgneC1yZWFsLWlwJyk7XG4gIGNvbnN0IGNsaWVudElQID0gcmVxdWVzdC5oZWFkZXJzLmdldCgneC1jbGllbnQtaXAnKTtcbiAgXG4gIGlmIChmb3J3YXJkZWQpIHtcbiAgICByZXR1cm4gZm9yd2FyZGVkLnNwbGl0KCcsJylbMF0udHJpbSgpO1xuICB9XG4gIFxuICBpZiAocmVhbElQKSB7XG4gICAgcmV0dXJuIHJlYWxJUDtcbiAgfVxuICBcbiAgaWYgKGNsaWVudElQKSB7XG4gICAgcmV0dXJuIGNsaWVudElQO1xuICB9XG4gIFxuICAvLyBGYWxsYmFjayB0byBhIGRlZmF1bHQgZm9yIGxvY2FsIGRldmVsb3BtZW50XG4gIHJldHVybiAndW5rbm93bic7XG59Il0sIm5hbWVzIjpbIlJhdGVMaW1pdGVyIiwiY29uc3RydWN0b3IiLCJtYXhBdHRlbXB0cyIsIndpbmRvd01zIiwiYXR0ZW1wdHMiLCJNYXAiLCJpc1JhdGVMaW1pdGVkIiwiaWRlbnRpZmllciIsIm5vdyIsIkRhdGUiLCJlbnRyeSIsImdldCIsInJlc2V0VGltZSIsInNldCIsImNvdW50IiwiZ2V0UmVtYWluaW5nQXR0ZW1wdHMiLCJNYXRoIiwibWF4IiwiZ2V0UmVzZXRUaW1lIiwiY2xlYW51cCIsImtleSIsImVudHJpZXMiLCJkZWxldGUiLCJiZXRSYXRlTGltaXRlciIsInVzZXJDcmVhdGlvblJhdGVMaW1pdGVyIiwiYWRtaW5SYXRlTGltaXRlciIsInNldEludGVydmFsIiwiZ2V0Q2xpZW50SVAiLCJyZXF1ZXN0IiwiZm9yd2FyZGVkIiwiaGVhZGVycyIsInJlYWxJUCIsImNsaWVudElQIiwic3BsaXQiLCJ0cmltIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/rateLimit.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/validation.ts":
/*!*******************************!*\
  !*** ./src/lib/validation.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   sanitizeString: () => (/* binding */ sanitizeString),\n/* harmony export */   validateAddress: () => (/* binding */ validateAddress),\n/* harmony export */   validateEmail: () => (/* binding */ validateEmail),\n/* harmony export */   validateName: () => (/* binding */ validateName),\n/* harmony export */   validatePhone: () => (/* binding */ validatePhone),\n/* harmony export */   validateProbability: () => (/* binding */ validateProbability),\n/* harmony export */   validateProduct: () => (/* binding */ validateProduct),\n/* harmony export */   validateStakeAmount: () => (/* binding */ validateStakeAmount)\n/* harmony export */ });\n// Input validation utilities\nclass ValidationError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'ValidationError';\n    }\n}\nfunction validateEmail(email) {\n    if (!email || typeof email !== 'string') {\n        throw new ValidationError('Email is required');\n    }\n    if (email.length > 254) {\n        throw new ValidationError('Email is too long');\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n        throw new ValidationError('Invalid email format');\n    }\n}\nfunction validateName(name) {\n    if (!name || typeof name !== 'string') {\n        throw new ValidationError('Name is required');\n    }\n    if (name.length < 1 || name.length > 100) {\n        throw new ValidationError('Name must be between 1 and 100 characters');\n    }\n    // Basic sanitization - remove potentially harmful characters\n    if (/[<>\\\"'&]/.test(name)) {\n        throw new ValidationError('Name contains invalid characters');\n    }\n}\nfunction validateAddress(address) {\n    if (!address || typeof address !== 'object') {\n        throw new ValidationError('Address is required');\n    }\n    const required = [\n        'street',\n        'city',\n        'state',\n        'zipCode',\n        'country'\n    ];\n    for (const field of required){\n        if (!address[field] || typeof address[field] !== 'string') {\n            throw new ValidationError(`Address ${field} is required`);\n        }\n        if (address[field].length > 100) {\n            throw new ValidationError(`Address ${field} is too long`);\n        }\n        // Basic sanitization\n        if (/[<>\\\"'&]/.test(address[field])) {\n            throw new ValidationError(`Address ${field} contains invalid characters`);\n        }\n    }\n    // Enhanced ZIP code validation by country\n    if (address.country === 'United States') {\n        // US ZIP codes: 12345 or 12345-6789\n        if (!/^\\d{5}(-\\d{4})?$/.test(address.zipCode)) {\n            throw new ValidationError('Invalid US ZIP code format (should be 12345 or 12345-6789)');\n        }\n    } else if (address.country === 'Canada') {\n        // Canadian postal codes: A1A 1A1\n        if (!/^[A-Za-z]\\d[A-Za-z] \\d[A-Za-z]\\d$/.test(address.zipCode)) {\n            throw new ValidationError('Invalid Canadian postal code format (should be A1A 1A1)');\n        }\n    } else {\n        // Generic validation for other countries\n        if (!/^[A-Za-z0-9\\s-]{3,12}$/.test(address.zipCode)) {\n            throw new ValidationError('Invalid postal code format');\n        }\n    }\n    // Enhanced state validation for US addresses\n    if (address.country === 'United States') {\n        const validStates = [\n            'AL',\n            'AK',\n            'AZ',\n            'AR',\n            'CA',\n            'CO',\n            'CT',\n            'DE',\n            'FL',\n            'GA',\n            'HI',\n            'ID',\n            'IL',\n            'IN',\n            'IA',\n            'KS',\n            'KY',\n            'LA',\n            'ME',\n            'MD',\n            'MA',\n            'MI',\n            'MN',\n            'MS',\n            'MO',\n            'MT',\n            'NE',\n            'NV',\n            'NH',\n            'NJ',\n            'NM',\n            'NY',\n            'NC',\n            'ND',\n            'OH',\n            'OK',\n            'OR',\n            'PA',\n            'RI',\n            'SC',\n            'SD',\n            'TN',\n            'TX',\n            'UT',\n            'VT',\n            'VA',\n            'WA',\n            'WV',\n            'WI',\n            'WY',\n            'DC' // District of Columbia\n        ];\n        if (!validStates.includes(address.state.toUpperCase())) {\n            throw new ValidationError('Invalid US state code (use 2-letter abbreviation like CA, NY, TX)');\n        }\n    }\n    // Basic address format validation\n    if (address.street.length < 5) {\n        throw new ValidationError('Street address seems too short to be valid');\n    }\n    if (address.city.length < 2) {\n        throw new ValidationError('City name seems too short to be valid');\n    }\n    // Check for obviously fake addresses\n    const suspiciousPatterns = [\n        /test|fake|invalid|example|dummy/i,\n        /123.*main.*st/i,\n        /111.*111|222.*222|999.*999/i\n    ];\n    for (const pattern of suspiciousPatterns){\n        if (pattern.test(address.street) || pattern.test(address.city)) {\n            throw new ValidationError('Please provide a valid, real address for shipping');\n        }\n    }\n}\nfunction validatePhone(phone) {\n    if (phone) {\n        if (typeof phone !== 'string') {\n            throw new ValidationError('Phone must be a string');\n        }\n        if (phone.length > 20) {\n            throw new ValidationError('Phone number is too long');\n        }\n        // Allow digits, spaces, dashes, parentheses, plus sign\n        if (!/^[\\d\\s\\-\\(\\)\\+]+$/.test(phone)) {\n            throw new ValidationError('Invalid phone number format');\n        }\n    }\n}\nfunction validateStakeAmount(stake, productPrice) {\n    if (typeof stake !== 'number' || isNaN(stake)) {\n        throw new ValidationError('Stake must be a valid number');\n    }\n    if (stake < 0.01) {\n        throw new ValidationError('Minimum stake is $0.01');\n    }\n    if (stake > 10000) {\n        throw new ValidationError('Maximum stake is $10,000');\n    }\n    if (stake > productPrice) {\n        throw new ValidationError('Stake cannot exceed product price');\n    }\n}\nfunction validateProduct(product) {\n    if (!product || typeof product !== 'object') {\n        throw new ValidationError('Product is required');\n    }\n    if (!product.name || typeof product.name !== 'string') {\n        throw new ValidationError('Product name is required');\n    }\n    if (product.name.length > 500) {\n        throw new ValidationError('Product name is too long');\n    }\n    if (typeof product.price !== 'number' || isNaN(product.price)) {\n        throw new ValidationError('Product price must be a valid number');\n    }\n    if (product.price < 0.01 || product.price > 100000) {\n        throw new ValidationError('Product price must be between $0.01 and $100,000');\n    }\n    if (!product.currency || typeof product.currency !== 'string') {\n        throw new ValidationError('Product currency is required');\n    }\n    if (product.currency !== 'USD') {\n        throw new ValidationError('Only USD currency is supported');\n    }\n    if (!product.url || typeof product.url !== 'string') {\n        throw new ValidationError('Product URL is required');\n    }\n    try {\n        new URL(product.url);\n    } catch  {\n        throw new ValidationError('Invalid product URL');\n    }\n    if (product.image && typeof product.image !== 'string') {\n        throw new ValidationError('Product image must be a string');\n    }\n    if (product.image) {\n        try {\n            new URL(product.image);\n        } catch  {\n            throw new ValidationError('Invalid product image URL');\n        }\n    }\n}\nfunction validateProbability(probability) {\n    if (typeof probability !== 'number' || isNaN(probability)) {\n        throw new ValidationError('Probability must be a valid number');\n    }\n    if (probability < 0 || probability > 1) {\n        throw new ValidationError('Probability must be between 0 and 1');\n    }\n}\nfunction sanitizeString(input) {\n    return input.replace(/[<>\\\"'&]/g, '') // Remove potentially harmful characters\n    .trim().slice(0, 1000); // Limit length\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/validation.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbets%2Froute&page=%2Fapi%2Fbets%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbets%2Froute.ts&appDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsamchou%2FSweepstakes%20Google%20Extension%2Fshopspin-server&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();