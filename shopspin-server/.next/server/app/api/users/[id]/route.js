(()=>{var e={};e.id=100,e.ids=[100],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4910:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>p,serverHooks:()=>y,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>w});var s={};r.r(s),r.d(s,{DELETE:()=>l,PATCH:()=>c});var a=r(6559),i=r(8088),n=r(7719),o=r(2190),d=r(8994),u=r(9812);async function c(e,{params:t}){try{let{id:r}=await t,s=await e.json();if(!await d.P.getUserById(r))return o.NextResponse.json({success:!1,error:"User not found"},{status:404});try{if(void 0!==s.email){(0,u.DT)(s.email);let e=await d.P.getUserByEmail(s.email);if(e&&e.id!==r)return o.NextResponse.json({success:!1,error:"Email is already in use by another user"},{status:400})}void 0!==s.name&&(0,u.yS)(s.name),void 0!==s.address&&(0,u.jl)(s.address),void 0!==s.phone&&(0,u.FY)(s.phone)}catch(e){if(e instanceof u.yI)return o.NextResponse.json({success:!1,error:e.message},{status:400});throw e}let a=await d.P.updateUser(r,s);if(!a)return o.NextResponse.json({success:!1,error:"Failed to update user"},{status:500});return console.log(`ðŸŽ° USER UPDATED: ${a.email}`),o.NextResponse.json({success:!0,data:a,message:"User updated successfully"})}catch(e){return console.error("Error updating user:",e),o.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}async function l(e,{params:t}){try{let{id:e}=await t;if(!await d.P.getUserById(e))return o.NextResponse.json({success:!1,error:"User not found"},{status:404});return o.NextResponse.json({success:!0,message:"User deletion would be implemented here"})}catch(e){return console.error("Error deleting user:",e),o.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/users/[id]/route",pathname:"/api/users/[id]",filename:"route",bundlePath:"app/api/users/[id]/route"},resolvedPagePath:"/Users/samchou/Sweepstakes Google Extension/shopspin-server/src/app/api/users/[id]/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:m,workUnitAsyncStorage:w,serverHooks:y}=p;function f(){return(0,n.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:w})}},6330:e=>{"use strict";e.exports=require("@prisma/client")},6487:()=>{},8335:()=>{},8994:(e,t,r)=>{"use strict";r.d(t,{P:()=>n});var s=r(6330);let a=globalThis.prisma??new s.PrismaClient({log:["query"]});class i{async createUser(e){let t=await a.user.create({data:{email:e.email,name:e.name,street:e.address.street,city:e.address.city,state:e.address.state,zipCode:e.address.zipCode,country:e.address.country,phone:e.phone}});return this.formatUser(t)}async getUserByEmail(e){let t=await a.user.findUnique({where:{email:e}});return t?this.formatUser(t):null}async getUserById(e){let t=await a.user.findUnique({where:{id:e}});return t?this.formatUser(t):null}async updateUser(e,t){try{let r={};t.email&&(r.email=t.email),t.name&&(r.name=t.name),void 0!==t.phone&&(r.phone=t.phone),t.address&&(r.street=t.address.street,r.city=t.address.city,r.state=t.address.state,r.zipCode=t.address.zipCode,r.country=t.address.country);let s=await a.user.update({where:{id:e},data:r});return this.formatUser(s)}catch(e){return console.error("Error updating user:",e),null}}async createBet(e){let t=await a.bet.create({data:{userId:e.userId,productName:e.product.name,productPrice:e.product.price,productCurrency:e.product.currency,productUrl:e.product.url,productImage:e.product.image,stakeAmount:e.stakeAmount,probability:e.probability,won:e.won,betTimestamp:e.betTimestamp}});return this.formatBet(t)}async getBetById(e){let t=await a.bet.findUnique({where:{id:e}});return t?this.formatBet(t):null}async getBetsByUserId(e){return(await a.bet.findMany({where:{userId:e},orderBy:{betTimestamp:"desc"}})).map(this.formatBet)}async getAllBets(){return(await a.bet.findMany({orderBy:{betTimestamp:"desc"}})).map(this.formatBet)}async createWin(e){let t=await a.win.create({data:{userId:e.userId,productName:e.product.name,productPrice:e.product.price,productCurrency:e.product.currency,productUrl:e.product.url,productImage:e.product.image,stakeAmount:e.stakeAmount,probability:e.probability,status:this.mapStatusToPrisma(e.status),orderNumber:e.orderDetails?.orderNumber,trackingNumber:e.orderDetails?.trackingNumber,estimatedDelivery:e.orderDetails?.estimatedDelivery,actualDelivery:e.orderDetails?.actualDelivery,notes:e.orderDetails?.notes,winTimestamp:e.winTimestamp}});return this.formatWin(t)}async getWinById(e){let t=await a.win.findUnique({where:{id:e}});return t?this.formatWin(t):null}async getWinsByUserId(e){return(await a.win.findMany({where:{userId:e},orderBy:{winTimestamp:"desc"}})).map(this.formatWin)}async getAllWins(){return(await a.win.findMany({orderBy:{winTimestamp:"desc"}})).map(this.formatWin)}async updateWin(e,t){try{let r={};t.status&&(r.status=this.mapStatusToPrisma(t.status)),t.orderDetails&&(void 0!==t.orderDetails.orderNumber&&(r.orderNumber=t.orderDetails.orderNumber),void 0!==t.orderDetails.trackingNumber&&(r.trackingNumber=t.orderDetails.trackingNumber),void 0!==t.orderDetails.estimatedDelivery&&(r.estimatedDelivery=t.orderDetails.estimatedDelivery),void 0!==t.orderDetails.actualDelivery&&(r.actualDelivery=t.orderDetails.actualDelivery),void 0!==t.orderDetails.notes&&(r.notes=t.orderDetails.notes));let s=await a.win.update({where:{id:e},data:r});return this.formatWin(s)}catch(e){return console.error("Error updating win:",e),null}}async getStatistics(){let[e,t,r]=await Promise.all([a.user.count(),a.bet.findMany(),a.win.findMany()]),s=t.reduce((e,t)=>e+t.stakeAmount,0),i=r.reduce((e,t)=>e+t.productPrice,0),n=t.length,o=t.filter(e=>e.won).length;return{totalUsers:e,totalBets:n,winningBets:o,losingBets:t.filter(e=>!e.won).length,winRate:parseFloat((n>0?o/n*100:0).toFixed(2)),totalWins:r.length,pendingWins:r.filter(e=>"PENDING"===e.status).length,processingWins:r.filter(e=>"PROCESSING"===e.status).length,orderedWins:r.filter(e=>"ORDERED"===e.status).length,shippedWins:r.filter(e=>"SHIPPED"===e.status).length,deliveredWins:r.filter(e=>"DELIVERED"===e.status).length,totalStakesCollected:s,totalValuePaidOut:i,profitLoss:s-i}}async reset(){await a.$transaction([a.bet.deleteMany(),a.win.deleteMany(),a.user.deleteMany()])}formatUser(e){return{id:e.id,email:e.email,name:e.name,address:{street:e.street,city:e.city,state:e.state,zipCode:e.zipCode,country:e.country},phone:e.phone,createdAt:e.createdAt,updatedAt:e.updatedAt}}formatBet(e){return{id:e.id,userId:e.userId,product:{name:e.productName,price:e.productPrice,currency:e.productCurrency,url:e.productUrl,image:e.productImage},stakeAmount:e.stakeAmount,probability:e.probability,won:e.won,betTimestamp:e.betTimestamp,createdAt:e.createdAt,updatedAt:e.updatedAt}}formatWin(e){try{return{id:e.id,userId:e.userId,product:{name:e.productName,price:e.productPrice,currency:e.productCurrency,url:e.productUrl,image:e.productImage},stakeAmount:e.stakeAmount,probability:e.probability,status:e.status?e.status.toLowerCase():"pending",orderDetails:{orderNumber:e.orderNumber||null,trackingNumber:e.trackingNumber||null,estimatedDelivery:e.estimatedDelivery||null,actualDelivery:e.actualDelivery||null,notes:e.notes||null},winTimestamp:e.winTimestamp,createdAt:e.createdAt,updatedAt:e.updatedAt}}catch(t){throw console.error("Error formatting win:",t,"Win data:",e),t}}mapStatusToPrisma(e){return e.toUpperCase().replace(/-/g,"_")}mapStatusFromPrisma(e){let t=e.toLowerCase();return console.log("Mapping status from Prisma:",e,"to:",t),t}}let n=new i},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},9812:(e,t,r)=>{"use strict";r.d(t,{DT:()=>a,FY:()=>o,WJ:()=>c,gi:()=>u,jl:()=>n,x5:()=>d,yI:()=>s,yS:()=>i});class s extends Error{constructor(e){super(e),this.name="ValidationError"}}function a(e){if(!e||"string"!=typeof e)throw new s("Email is required");if(e.length>254)throw new s("Email is too long");if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e))throw new s("Invalid email format")}function i(e){if(!e||"string"!=typeof e)throw new s("Name is required");if(e.length<1||e.length>100)throw new s("Name must be between 1 and 100 characters");if(/[<>\"'&]/.test(e))throw new s("Name contains invalid characters")}function n(e){if(!e||"object"!=typeof e)throw new s("Address is required");for(let t of["street","city","state","zipCode","country"]){if(!e[t]||"string"!=typeof e[t])throw new s(`Address ${t} is required`);if(e[t].length>100)throw new s(`Address ${t} is too long`);if(/[<>\"'&]/.test(e[t]))throw new s(`Address ${t} contains invalid characters`)}if("United States"===e.country){if(!/^\d{5}(-\d{4})?$/.test(e.zipCode))throw new s("Invalid US ZIP code format (should be 12345 or 12345-6789)")}else if("Canada"===e.country){if(!/^[A-Za-z]\d[A-Za-z] \d[A-Za-z]\d$/.test(e.zipCode))throw new s("Invalid Canadian postal code format (should be A1A 1A1)")}else if(!/^[A-Za-z0-9\s-]{3,12}$/.test(e.zipCode))throw new s("Invalid postal code format");if("United States"===e.country&&!["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DC"].includes(e.state.toUpperCase()))throw new s("Invalid US state code (use 2-letter abbreviation like CA, NY, TX)");if(e.street.length<5)throw new s("Street address seems too short to be valid");if(e.city.length<2)throw new s("City name seems too short to be valid");for(let t of[/test|fake|invalid|example|dummy/i,/123.*main.*st/i,/111.*111|222.*222|999.*999/i])if(t.test(e.street)||t.test(e.city))throw new s("Please provide a valid, real address for shipping")}function o(e){if(e){if("string"!=typeof e)throw new s("Phone must be a string");if(e.length>20)throw new s("Phone number is too long");if(!/^[\d\s\-\(\)\+]+$/.test(e))throw new s("Invalid phone number format")}}function d(e,t){if("number"!=typeof e||isNaN(e))throw new s("Stake must be a valid number");if(e<.01)throw new s("Minimum stake is $0.01");if(e>1e4)throw new s("Maximum stake is $10,000");if(e>t)throw new s("Stake cannot exceed product price")}function u(e){if(!e||"object"!=typeof e)throw new s("Product is required");if(!e.name||"string"!=typeof e.name)throw new s("Product name is required");if(e.name.length>500)throw new s("Product name is too long");if("number"!=typeof e.price||isNaN(e.price))throw new s("Product price must be a valid number");if(e.price<.01||e.price>1e5)throw new s("Product price must be between $0.01 and $100,000");if(!e.currency||"string"!=typeof e.currency)throw new s("Product currency is required");if("USD"!==e.currency)throw new s("Only USD currency is supported");if(!e.url||"string"!=typeof e.url)throw new s("Product URL is required");try{new URL(e.url)}catch{throw new s("Invalid product URL")}if(e.image&&"string"!=typeof e.image)throw new s("Product image must be a string");if(e.image)try{new URL(e.image)}catch{throw new s("Invalid product image URL")}}function c(e){if("number"!=typeof e||isNaN(e))throw new s("Probability must be a valid number");if(e<0||e>1)throw new s("Probability must be between 0 and 1")}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(4910));module.exports=s})();